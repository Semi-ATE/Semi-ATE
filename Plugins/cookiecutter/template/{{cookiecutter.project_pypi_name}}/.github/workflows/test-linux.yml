name: Linux tests

on:
  push:
    paths:
      - '.github/scripts/*.sh'
      - '.github/workflows/*.yml'
      - 'requirements/*.txt'
      - 'MANIFEST.in'
      - '**.bat'
      - '**.py'
      - '**.sh'

  pull_request:
    paths:
      - '.github/scripts/*.sh'
      - '.github/workflows/*.yml'
      - 'requirements/*.txt'
      - 'MANIFEST.in'
      - '**.bat'
      - '**.py'
      - '**.sh'

jobs:
  build:
    name: {{ 'Py${{ matrix.PYTHON_VERSION }}' }}
    runs-on: ubuntu-latest
    env:
      CI: 'true'
      CODECOV_TOKEN: ""
      OS: 'linux'
      PYTHON_VERSION: {{ '${{ matrix.PYTHON_VERSION }}' }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['3.6', '3.7', '3.8']
    steps:
      - name: Checkout Pull Requests
        uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if requirements/*.txt has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: {{ "${{ runner.os }}-cacheconda-${{ matrix.PYTHON_VERSION }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('requirements/*.txt') }}" }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: {{ "${{ runner.os }}-cachepip-${{ matrix.PYTHON_VERSION }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('requirements/*.txt') }}" }}
      - name: Install Conda
        uses: goanpeca/setup-miniconda@v1
        with:
          activate-environment: test
          auto-update-conda: true
          auto-activate-base: false
          python-version: {{ "${{ matrix.PYTHON_VERSION }}" }}
          use-only-tar-bz2: true
          channels: conda-forge
      - name: Create test environment
        shell: bash -l {0}
        run: |
           conda install -n test --file requirements/conda.txt -q -c conda-forge
           conda install -n test --file requirements/test.txt -q -c conda-forge
      - name: Show test environment
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Run manifest checks
        shell: bash -l {0}
        run: check-manifest
      - name: Run pre commit checks
        shell: bash -l {0}
        run: pre-commit run --all-files
      - name: Run tests
        shell: bash -l {0}
        run: xvfb-run --auto-servernum pytest tests --cov={{cookiecutter.project_package_name}}
      - name: Coverage
        shell: bash -l {0}
        run: codecov
