name: CD

on:
  release:
    types: [created]

jobs:
  make-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get install libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev libegl1-mesa libxkbcommon-x11-0 xterm --fix-missing

    - name: Install Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        python-version: '3.8'
        use-only-tar-bz2: true

    - name: Install project dependencies
      shell: bash -l {0}
      run: |
        conda config --append channels conda-forge/label/beta 
        conda install --file requirements/run.txt -c conda-forge -y -q
        conda install --file requirements/test.txt -c conda-forge -y -q
        python -m pip install git+https://github.com/goanpeca/spyder.git@fix/internal-plugs-for-ext-tests
        python -m pip install Semi-ATE-STDF
        cd Plugins/TDKMicronas
        python setup.py develop
        cd ../..

    - name: tag to version
      run: echo "__version__='${GITHUB_REF#refs/*/}'" >> ATE/__init__.py

    - name: Install package
      shell: bash -l {0}
      run: pip install -e .
      # shouldn't this be someting like `python setup.py install` ?

    - name: Run manifest checks
      shell: bash -l {0}
      run: check-manifest

    - name: Run tests
      shell: bash -l {0}
      run: |
        xvfb-run --auto-servernum pytest tests/ATE/TCC --cov=ATE
        xvfb-run --auto-servernum pytest tests/ATE/spyder --cov=ATE
        xvfb-run --auto-servernum pytest tests/ATE/TES/apps --cov=ATE

    - name: Create package
      run: python setup.py sdist

    - name: Check package
      shell: bash -l {0}
      run:  twine check dist/*
      
    - name: Upload maxiconda to Github artifact
      uses: actions/upload-artifact@v2
      with:
        path: dist/*
        name: pypi
        
    - name: List open pull requests
      run: hub release show
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     - name: Upload to PyPi
#       uses: pypa/gh-action-pypi-publish@v1.4.2
#       with:
#         password: ${{ secrets.PYPI_TOKEN }}
#         verbose: 1

#     - name: Upload coverage to Codecov  
#       uses: codecov/codecov-action@v1
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}



